Imports System
Imports System.Collections.Generic
Imports System.Data
Imports Newtonsoft.Json.Linq

Namespace JsonToDataTable
    Class Program
        Private Shared Sub Main(ByVal args As String())
            Dim json As String = _
            Dim jsonObj As JObject = JObject.Parse("{ ""transactions"": " & json & "}")
            Dim dataTable = GenerateDataTable(jsonObj)

            For Each column As DataColumn In dataTable.Columns
                Console.Write(column.ColumnName & vbTab)
            Next

            Console.WriteLine()

            For Each row As DataRow In dataTable.Rows

                For i = 0 To dataTable.Columns.Count - 1
                    Console.Write(row(i) & vbTab)
                Next

                Console.WriteLine()
            Next
        End Sub

        Private Shared Function GenerateDataTable(ByVal jsonObj As JObject) As DataTable
            Dim dataTable = New DataTable()

            For Each pair In CType(jsonObj("transactions")(0), JObject)
                FlattenJToken(pair.Key, pair.Value, dataTable, "")
            Next

            For Each transaction In jsonObj("transactions")
                Dim dr As DataRow = dataTable.NewRow()
                FillRowData("", transaction.First, dr)
                dataTable.Rows.Add(dr)
            Next

            Return dataTable
        End Function

        Private Shared Sub FlattenJToken(ByVal parentName As String, ByVal token As JToken, ByVal dataTable As DataTable, ByVal prefix As String)
            Select Case token.Type
                Case JTokenType.Object

                    For Each pair In CType(token, JObject)
                        FlattenJToken(parentName, pair.Value, dataTable, pair.Key & "_")
                    Next

                Case JTokenType.Array
                    Dim jArr = CType(token, JArray)

                    If jArr(0).Type = JTokenType.Object Then
                        FlattenJToken(parentName, jArr(0), dataTable, prefix)
                    End If

                Case Else
                    Dim colName = parentName & prefix.Substring(0, prefix.Length - 1)

                    If Not dataTable.Columns.Contains(colName) Then
                        dataTable.Columns.Add(colName)
                    End If
            End Select
        End Sub

        Private Shared Sub FillRowData(ByVal parentName As String, ByVal token As JToken, ByVal dr As DataRow)
            Select Case token.Type
                Case JTokenType.Object

                    For Each pair In CType(token, JObject)
                        FillRowData(parentName, pair.Value, dr)
                    Next

                Case JTokenType.Array
                    Dim jArr = CType(token, JArray)

                    If jArr(0).Type = JTokenType.Object Then
                        FillRowData(parentName, jArr(0), dr)
                    End If

                Case Else
                    dr(parentName) = (CType(token, JValue)).Value
            End Select
        End Sub
    End Class
End Namespace
