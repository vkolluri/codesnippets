Class ApiConverter
    Inherits CustomCreationConverter(Of PersonEntityData)

    ReadOnly entities As Dictionary(Of String, Object)

    Public Sub New()
        entities = New Dictionary(Of String, Object)()
    End Sub

    Public Function Create(ByVal objectType As Type, ByVal type As String) As PersonEntityData
        Select Case type
            Case "1"
                Return New PersonName()
            Case "2"
                Return New EntityName()
            Case "3"
                Return New PersonDetails()
            Case "4"
                Return New EntityDetails()
            Case Else
                Throw New ApplicationException(String.Format("The typeCode {0} is not supported!", type))
        End Select
    End Function

    Public Function Create(ByVal type As String) As PersonEntityDataItem
        Select Case type
            Case NameOf(SourcesOfCash)
                Return New SourcesOfCash()
            Case NameOf(Holders)
                Return New Holders()
            Case NameOf(Conductors)
                Return New Conductors()
            Case NameOf(Involvements)
                Return New Involvements()
            Case NameOf(OnBehalfOfs)
                Return New OnBehalfOfs()
            Case NameOf(Beneficiaries)
                Return New Beneficiaries()
            Case Else
                Throw New ApplicationException(String.Format("This type {0} is not supported!", type))
        End Select
    End Function

    Public Overrides Function Create(ByVal objectType As Type) As PersonEntityData
        Throw New NotImplementedException()
    End Function

    Public Overrides Function ReadJson(ByVal reader As JsonReader, ByVal objectType As Type, ByVal existingValue As Object, ByVal serializer As JsonSerializer) As Object
        Dim target As Object = Nothing
        Dim jObject As JObject = JObject.Load(reader)
        Dim type = CStr(jObject.[Property]("typeCode"))

        If objectType.Name = NameOf(PersonEntityData) Then
            target = Create(objectType, type)
            serializer.Populate(jObject.CreateReader(), target)
            entities.Add((CType(target, PersonEntityData)).RefId, target)
        ElseIf objectType.BaseType.Name = NameOf(PersonEntityDataItem) Then
            target = Create(objectType.Name)
            serializer.Populate(jObject.CreateReader(), target)
            (CType(target, PersonEntityDataItem)).PersonEntity = CType(entities(CStr(jObject.[Property]("refId"))), PersonEntityData)
        End If

        Return target
    End Function
End Class
