Public Shared Function RenderToHtml(obj As T) As String
        If obj Is Nothing Then
            Return String.Empty
        End If

        Dim objectType As Type = GetType(T)
        Dim properties As PropertyInfo() = objectType.GetProperties()

        Dim html As New StringBuilder()
        html.Append("<table border='1'>")

        For Each property As PropertyInfo In properties
            html.Append("<tr>")
            html.AppendFormat("<th>{0}</th>", property.Name)
            html.AppendFormat("<td>{0}</td>", RenderPropertyValue(property.GetValue(obj)))
            html.Append("</tr>")
        Next

        html.Append("</table>")
        Return html.ToString()
    End Function

    Private Shared Function RenderPropertyValue(value As Object) As String
        If value Is Nothing Then
            Return String.Empty
        End If

        Dim valueType As Type = value.GetType()

        If valueType.IsPrimitive OrElse valueType = GetType(String) OrElse valueType.IsEnum Then
            ' Render simple values directly
            Return value.ToString()
        ElseIf valueType.IsClass Then
            ' Recursively render nested objects
            Return RenderToHtml(value)
        ElseIf valueType.IsGenericType AndAlso valueType.GetGenericTypeDefinition() = GetType(List(Of )) Then
            ' Handle lists of objects
            Dim list = DirectCast(value, IEnumerable(Of Object))
            Dim listHtml As New StringBuilder("<ul>")

            For Each item In list
                listHtml.AppendFormat("<li>{0}</li>", RenderPropertyValue(item))
            Next

            listHtml.Append("</ul>")
            Return listHtml.ToString()
        Else
            ' Handle other complex types as needed
            Return value.ToString()
        End If
    End Function
