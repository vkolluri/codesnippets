Imports OfficeOpenXml
Imports System
Imports System.Collections.Generic
Imports System.IO
Imports System.Reflection

Public Class ExcelExporter
    Public Shared Sub ExportToExcel(Of T)(data As List(Of T), filePath As String)
        Using package = New ExcelPackage()
            Dim worksheet = package.Workbook.Worksheets.Add("Data")

            ' Get all properties, including nested ones
            Dim properties = GetType(T).GetProperties()

            ' Add headers
            For i As Integer = 0 To properties.Length - 1
                worksheet.Cells(1, i + 1).Value = properties(i).Name
            Next

            ' Flatten and populate data
            For rowIndex As Integer = 0 To data.Count - 1
                Dim item = data(rowIndex)
                Dim row = New List(Of Object)()

                For Each prop As PropertyInfo In properties
                    Dim value = FlattenProperty(item, prop)
                    row.Add(value)
                Next

                For colIndex As Integer = 0 To row.Count - 1
                    worksheet.Cells(rowIndex + 2, colIndex + 1).Value = row(colIndex)
                Next
            Next

            ' Save the Excel file
            Dim excelFile = New FileInfo(filePath)
            package.SaveAs(excelFile)
        End Using
    End Sub

    Private Shared Function FlattenProperty(obj As Object, prop As PropertyInfo) As Object
        Dim value = prop.GetValue(obj)
        If value Is Nothing Then
            Return DBNull.Value
        End If

        ' Check if the property is a nested object
        If prop.PropertyType.IsClass AndAlso prop.PropertyType IsNot GetType(String) Then
            Dim nestedProperties = prop.PropertyType.GetProperties()
            Dim nestedRow = New List(Of Object)()

            For Each nestedProp As PropertyInfo In nestedProperties
                Dim nestedValue = FlattenProperty(value, nestedProp)
                nestedRow.Add(nestedValue)
            Next

            Return String.Join(", ", nestedRow)
        End If

        Return value
    End Function
End Class
